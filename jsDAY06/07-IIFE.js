//立即执行函数的基本使用
// (function () { 
//     console.log('立即执行函数'); 
// })()

//不同返回值的情况
// var result = !function () { 
//     return '' }()
// console.log(result);

for (var i = 0; i < 6; i++) {
    function output() {
    console.log(i); // 为什么输出的是6，⽽不是0，1，2，3，4，5
    // 因为输出的 i 是全局作⽤域的，当循环结束后 i 的值是 6，所以输出的i 就是6。
    // 也就是说，当函数执⾏时，全局作⽤域的 i 已经是 6 了，所以输出的 i 就是 6。
    }}
output()

    // 如果想要输出0，1，2，3，4，5，那么就需要把 i 放到作⽤域中，这样就可以输出0，1，2，3，4，5了。
    for (var i = 0; i < 6; i++) {
     (function (j) {
    console.log(j); //0,1,2,3,4,5
     })(i)
    // 因为 JS 中调⽤函数传递参数都是值传递 ，所以当⽴即执⾏函数执⾏时，
    // ⾸先会把参数 i 的值复制⼀份，然后再创建函数作⽤域来执⾏函数，
    // 循环5次就会创建5个作⽤域，所以每个输出访问的都是不同作⽤域的 i 的值 。
    }